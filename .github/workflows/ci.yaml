name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # ----- Получение кода из репозитория -----
      - name: Checkout code
        uses: actions/checkout@v3

      # ----- Кэширование pip-зависимостей -----
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      # ----- Настройка Python -----
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # ----- Установка зависимостей -----
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ----- Запуск pytest локально -----
      - name: Run pytest
        run: pytest -q

      # ----- Сборка Docker-образа приложения -----
      - name: Build Docker app image
        run: docker compose build app

      # ----- Запуск тестов внутри Docker-контейнера -----
      - name: Run tests inside container
        run: docker compose run --rm app pytest -q



  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      # ----- Получение кода из репозитория -----
      - name: Checkout code
        uses: actions/checkout@v3

      # ----- Сборка и публикация Docker-образа -----
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: myregistry/image-server:latest

      # ----- Запуск сервисов для healthcheck -----
      - name: Start services for healthcheck
        run: docker compose up -d

      # ----- Проверяем запускается ли контейнер -----
      - name: List running containers
        run: docker ps

      # ----- Вывод логов для отладки -----
      - name: Show app logs
        run: docker compose logs app

      # ----- Ожидание готовности приложения -----
      - name: Wait for app to be healthy
        run: sleep 5

      # ----- Проверка healthcheck-эндпоинта -----
      - name: Healthcheck endpoint
        run: curl --fail http://localhost:8000/health

      # ----- Деплой на production-сервер -----
      - name: Deploy to server
        run: ssh user@yourserver 'cd ~/project && docker compose pull && docker compose up -d'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}